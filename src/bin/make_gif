#!/usr/bin/env python3

import argparse
import glob
import os
import sys

from PIL import Image

sys.path.append("..")

from utils.logger import get_logger
from settings import IMG_DIR, OUT_DIR


logger = get_logger(__name__)
parser = argparse.ArgumentParser(description="Generate gif with images")
parser.add_argument("output", type=str, help="Name for the output gif")
parser.add_argument("duration", type=int, help="Duracion ")
parser.add_argument("gifsize", type=int, nargs="+", help="gif size")

def convert_to_jpeg(image, size):
    logger.info("[make_gif] converting %s " % image)
    new_name = "%s-%s" % (image.split(".")[0], "giffy")
    new_name += ".jpeg"
    im = Image.open(image)
    rgb_im = im.convert('RGB')
    rgb_im = rgb_im.resize(tuple(size))
    rgb_im.save(new_name)
    logger.info("[make_gif] saving new image %s" % new_name)


def make_gif(args, frame_folder):
    for image in os.listdir(frame_folder):
        image = os.path.join(frame_folder, image)
        convert_to_jpeg(image, args.gifsize)
    
    frames = []
    for image in os.listdir(frame_folder):
        if "giffy" in image:
            logger.info("[make_gif] loading %s into gif" % image)
            image = os.path.join(frame_folder, image)
            image = Image.open(image)
            frames.append(image)

    frame_one = frames[0]
    logger.info("[make_gif] saving frames as gif")
    frame_one.save(
        os.path.join(OUT_DIR, args.output), 
        format="GIF", 
        append_images=frames,
        save_all=True, 
        duration=int(args.duration), 
        loop=0
    )
    logger.info("[make_gif] frames saved as gif.")
    for image in os.listdir(frame_folder):
        if "giffy" in image:
            logger.info("[make_gif] unlinking image %s " % image)
            os.unlink(os.path.join(frame_folder, image))

if __name__ == "__main__":
    args = parser.parse_args()
    make_gif(args, IMG_DIR)
